@{ ViewData["Title"] = @Model.InvoiceName + " - Thông tin"; ViewData["InvoiceID"] = @Model.ID; }

@using Kendo.Mvc.UI
@model SOHU.Data.Models.Invoice
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-8">
                <h1><b>@Model.InvoiceName</b></h1>
            </div>
            <div class="col-sm-4">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Dự án - công trình</a></li>
                    <li class="breadcrumb-item active"><a class="text-primary" asp-action="Index" asp-controller="Project">Danh sách</a></li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-body">
                        <form asp-action="SaveProject" asp-controller="Project">
                            @Html.HiddenFor(Model => Model.ID)
                            @Html.HiddenFor(Model => Model.CategoryID)
                            <div class="row">
                                <div class='col-md-1'>
                                    <a asp-action="Index" asp-controller="Project" title="Danh sách" style="width:100%;" class="btn btn-info">
                                        <span class="fas fa-arrow-left"></span>
                                    </a>
                                </div>
                                <div class='col-md-1'>
                                    <button style="width:100%;" type="submit" title="Save" class="btn btn-primary">
                                        <span class="fas fa-save"></span>
                                    </button>
                                </div>
                                <div class='col-md-1'>
                                    <a asp-route-ID="0" asp-action="Detail" asp-controller="Project" title="Tạo mới" style="width:100%;" class="btn btn-success">
                                        <span class="fas fa-plus"></span>
                                    </a>
                                </div>
                                <div class='col-md-1'>
                                    <a asp-route-ID="@Model.ID" asp-action="DetailThiCongBarcode" asp-controller="Project" title="Files" style="width:100%;" class="btn btn-success">
                                        <span class="fas fa-qrcode"></span>
                                    </a>
                                </div>
                                <div class='col-md-2'>
                                    <a asp-route-ID="@Model.ID" asp-action="DetailDuToan" asp-controller="Project" title="Files" style="width:100%;" class="btn btn-success">
                                        Dự toán
                                    </a>
                                </div>
                                <div class='col-md-2'>
                                    <a asp-route-ID="@Model.ID" asp-action="DetailChamCong" asp-controller="Project" title="Files" style="width:100%;" class="btn btn-success">
                                        Chấm công
                                    </a>
                                </div>
                                <div class='col-md-2'>
                                    <a asp-route-ID="@Model.ID" asp-action="DetailHopDong" asp-controller="Project" title="Files" style="width:100%;" class="btn btn-success">
                                        Hợp đồng
                                    </a>
                                </div>
                                <div class='col-md-1'>
                                    <a asp-route-ID="@Model.ID" asp-action="DetailFiles" asp-controller="Project" title="Files" style="width:100%;" class="btn btn-success">
                                        <span class="fas fa-paperclip"></span>
                                    </a>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class='form-group'>
                                        <label for='InvoiceName'>Dự án</label>
                                        @(Html.TextBoxFor(Model => Model.InvoiceName, new { placeholder = "Dự án", @class = "form-control" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='ManageCode'>Người liên hệ (Theo khách hàng)</label>
                                        @(Html.TextBoxFor(Model => Model.ManageCode, new { placeholder = "Người liên hệ", @class = "form-control", style = "text-align:right;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='BuyPhone'>Điện thoại (Theo khách hàng)</label>
                                        @(Html.TextBoxFor(Model => Model.BuyPhone, new { placeholder = "Điện thoại", @class = "form-control", style = "text-align:right;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='BuyAddress'>Địa chỉ thi công (Theo khách hàng)</label>
                                        @(Html.TextBoxFor(Model => Model.BuyAddress, new { placeholder = "Địa chỉ thi công", @class = "form-control", style = "text-align:right;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='Tax'>Thuế VAT (%)</label>
                                        @(Html.TextBoxFor(Model => Model.Tax, "{0:N0}", new { placeholder = "Thuế VAT (%)", @class = "form-control", style = "text-align:right;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='InvoiceCode'>Số hóa đơn</label>
                                        @(Html.TextBoxFor(Model => Model.SoHoaDon, new { placeholder = "Số hóa đơn", @class = "form-control" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='MakeCode'>Mẫu số</label>
                                        @(Html.TextBoxFor(Model => Model.MauSo, new { placeholder = "Mẫu số", @class = "form-control" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='ManageCode'>Ký hiệu</label>
                                        @(Html.TextBoxFor(Model => Model.KyHieu, new { placeholder = "Ký hiệu", @class = "form-control" }))
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class='form-group'>
                                        <label for='BuyID'>Khách hàng</label>
                                        @(Html.Kendo().DropDownListFor(Model => Model.BuyID)
                                   .DataValueField("ID")
                                   .DataTextField("FullName")
                                   .HtmlAttributes(new {@class = "form-control" })
                                    .Filter(FilterType.Contains)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetByCustomerParentIDToList", "Membership")))
                                    )
                                    </div>
                                    <div class='form-group'>
                                        <label for='MakeSideID'>Người lập</label>
                                        @(Html.Kendo().DropDownListFor(Model => Model.MakeSideID)
                                   .DataValueField("ID")
                                   .DataTextField("FullName")
                                   .HtmlAttributes(new {@class = "form-control" })
                                    .Filter(FilterType.Contains)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetByEmployeeParentIDToList", "Membership")))
                                    )
                                    </div>
                                    <div class='form-group'>
                                        <label for='InvoiceCreated'>Ngày ký hợp đồng</label>
                                        @(Html.TextBoxFor(Model => Model.InvoiceCreated, "{0:MM/dd/yyyy}", new { placeholder = "Điện thoại", @class = "form-control", style = "text-align:right;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='DateBegin'>Ngày bắt đầu</label>
                                        @(Html.TextBoxFor(Model => Model.DateBegin, "{0:MM/dd/yyyy}", new { placeholder = "Ngày bắt đầu", @class = "form-control", style = "text-align:right;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='DateEnd'>Ngày kết thúc</label>
                                        @(Html.TextBoxFor(Model => Model.DateEnd, "{0:MM/dd/yyyy}", new { placeholder = "Ngày kết thúc", @class = "form-control", style = "text-align:right;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='NgayXuatHoaDon'>Ngày xuất hóa đơn</label>
                                        @(Html.TextBoxFor(Model => Model.NgayXuatHoaDon, "{0:MM/dd/yyyy}", new { placeholder = "Ngày kết thúc", @class = "form-control", style = "text-align:right;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='IsXuatHoaDon'>Xuất hóa đơn</label>
                                        <br />
                                        @(Html.CheckBoxFor(Model => Model.IsXuatHoaDon.Value))
                                    </div>
                                   
                                    <div class='form-group'>
                                        <label for='IsHoanThanh'>Hoàn thành</label>
                                        <br />
                                        @(Html.CheckBoxFor(Model => Model.IsHoanThanh.Value))
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class='form-group'>
                                        <label for='TotalNoTax'>Trước thuế (Thi công)</label>
                                        @(Html.TextBoxFor(Model => Model.TotalNoTax, "{0:N0}", new { placeholder = "Trước thuế (Thi công)", @class = "form-control", @readonly = "readonly", style = "text-align:right; font-weight: bold;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='TotalTax'>Tiền thuế VAT</label>
                                        @(Html.TextBoxFor(Model => Model.TotalTax, "{0:N0}", new { placeholder = "Tiền thuế VAT", @class = "form-control", @readonly = "readonly", style = "text-align:right; font-weight: bold;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='Total'>Sau thuế</label>
                                        @(Html.TextBoxFor(Model => Model.Total, "{0:N0}", new { placeholder = "Sau thuế", @class = "form-control", @readonly = "readonly", style = "text-align:right; font-weight: bold; color:blue;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='TotalPaid'>Thanh toán</label>
                                        @(Html.TextBoxFor(Model => Model.TotalPaid, "{0:N0}", new { placeholder = "Thanh toán", @class = "form-control", @readonly = "readonly", style = "text-align:right; font-weight: bold; color:green;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='TotalDebt'>Dư nợ</label>
                                        @(Html.TextBoxFor(Model => Model.TotalDebt, "{0:N0}", new { placeholder = "Dư nợ", @class = "form-control", @readonly = "readonly", style = "text-align:right; font-weight: bold; color:red;" }))
                                    </div>
                                    <div class='form-group'>
                                        <label for='IsChaoGia'>Chào giá</label>
                                        <br />
                                        @(Html.CheckBoxFor(Model => Model.IsChaoGia.Value))
                                    </div>
                                    <div class='form-group'>
                                        <label for='IsHopDong'>Hợp đồng</label>
                                        <br />
                                        @(Html.CheckBoxFor(Model => Model.IsHopDong.Value))
                                    </div>
                                    <div class='form-group'>
                                        <label for='IsThiCong'>Thi công</label>
                                        <br />
                                        @(Html.CheckBoxFor(Model => Model.IsThiCong.Value))
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Thi công</h3>
                    </div>
                    <div class="card-body">                        
                        @(Html.Kendo().Grid<SOHU.Data.DataTransferObject.InvoiceDetailDataTransfer>()
                .Name("ProjectThiCong")
                .Columns(columns =>
                {
                    columns.Command(command =>
                    {
                        command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "padding-top:6px; padding-left:15px; border-radius: 6px; width:50px; font-weight:bold; color:black;" });
                        command.Destroy().Text("&nbsp;").IconClass("fas fa-trash").HtmlAttributes(new { style = "color:#ffffff; background-color:#d73925; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-danger" });
                    }).Width(150);
                    columns.Bound(t => t.ProductCode).Title("Mã vạch").Width(160).HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.ManufacturingCode).Title("Mã sản xuất").Width(160).HtmlAttributes(new { style = "text-align: right;" });
                    columns.Template(@"<a target='_blank' href='/Product/Detail?ID=#=ProductID#' class='btn btn-success' style='color:white;'><i class='fas fa-box-open'></i></a>").Title("&nbsp;").Width(70).HtmlAttributes(new { style = "text-align:center;" });
                    columns.Bound(t => t.Product.TextName).Title("Hàng hóa").EditorTemplateName("Product").Width(300).HtmlAttributes(new { style = "font-weight: bold;" });
                    columns.Bound(t => t.Unit.TextName).Title("Đơn vị").EditorTemplateName("Config_Unit").Width(150).HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.Quantity).Title("Số lượng").Width(100).HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.PriceInput).Title("Giá nhập").Width(100).Format("{0:N0}").HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.UnitPrice).Title("Giá xuất").Width(100).Format("{0:N0}").HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.Discount).Title("Chiết khấu (%)").Width(150).HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.Total).Title("Thành tiền").Width(100).Format("{0:N0}").HtmlAttributes(new { style = "text-align: right; font-weight: bold;" });
                    columns.Bound(t => t.DateTrack).Title("Ngày").Width(150).HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.Parent.TextName).Title("Dự toán").EditorTemplateName("Project_ChiTietDuToan").Width(500);
                    columns.Bound(t => t.Employee.TextName).Title("Người nhận").EditorTemplateName("Membership_Employee").Width(200);
                })
                .ToolBar(toolBar => toolBar.Create().Text("&nbsp").IconClass("fas fa-plus").HtmlAttributes(new { style = "border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
                .ToolBar(toolBar => toolBar.Search())
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                .Sortable()
                .Scrollable()
                .Reorderable(r => r.Columns(true))
                .Resizable(r => r.Columns(true))
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(10))
                .Excel(excel => excel
                .FileName("CauHinh.xlsx")
                .Filterable(true)
                .ProxyURL(Url.Action("ExportExcel", "Config")))
                .Pdf(pdf => pdf
                .AllPages()
                .AvoidLinks()
                .PaperSize("A4")
                .Margin("2cm", "1cm", "1cm", "1cm")
                .Landscape()
                .RepeatHeaders()
                .FileName("Config.pdf"))
                .Search(search => { search.Field(f => f.ProductCode); search.Field(f => f.ManufacturingCode); })
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(1000)
                .Model(model =>
                {
                    model.Id(t => t.ID);
                    model.Field(t => t.Total).Editable(false);
                    model.Field(t => t.PriceInput).Editable(false);
                    model.Field(t => t.ID).Editable(false);
                    model.Field(t => t.Employee).DefaultValue(new SOHU.Data.DataTransferObject.ModelTemplate());
                    model.Field(t => t.Parent).DefaultValue(new SOHU.Data.DataTransferObject.ModelTemplate());
                    model.Field(t => t.Product).DefaultValue(new SOHU.Data.DataTransferObject.ModelTemplate());
                    model.Field(t => t.Unit).DefaultValue(new SOHU.Data.DataTransferObject.ModelTemplate());
                    model.Field(t => t.DateTrack).DefaultValue(DateTime.Now);
                    model.Field(t => t.Quantity).DefaultValue(1);
                    model.Field(t => t.UnitPrice).DefaultValue(1000);


                })
                .Events(t => { t.RequestEnd("onGridRequestEndProjectThiCong"); })
                .Read(t => t.Action("GetProjectThiCongByInvoiceIDAndThiCongToList", "Project").Data("filterProjectThiCong"))
                .Destroy(t => t.Action("DeleteProjectThiCong", "Project"))
                .Create(t => t.Action("CreateProjectThiCong", "Project").Data("filterProjectThiCong"))
                .Update(t => t.Action("UpdateProjectThiCong", "Project"))))
                    </div>
                </div>
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Lịch sử thanh toán</h3>
                    </div>
                    <div class="card-body">
                        @(Html.Kendo().Grid<SOHU.Data.Models.InvoicePayment>()
                .Name("InvoicePayment")
                .Columns(columns =>
                {
                    columns.Command(command =>
                    {
                        command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "padding-top:6px; padding-left:15px; border-radius: 6px; width:50px; font-weight:bold; color:black;" });
                        command.Destroy().Text("&nbsp;").IconClass("fas fa-trash").HtmlAttributes(new { style = "color:#ffffff; background-color:#d73925; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-danger" });
                    }).Width(150);
                    columns.Bound(t => t.PaymentCreated).Title("Ngày thanh toán").Width(200).HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.TotalPayment).Title("Thành tiền").Width(200).HtmlAttributes(new { style = "text-align: right;" });
                    columns.Bound(t => t.ID).Title("ID").Width(100).HtmlAttributes(new { style = "text-align: right;" });
                })
                .ToolBar(toolBar => toolBar.Create().Text("&nbsp").IconClass("fas fa-plus").HtmlAttributes(new { style = "border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
                .ToolBar(toolBar => toolBar.Search())
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                .Sortable()
                .Scrollable()
                .Reorderable(r => r.Columns(true))
                .Resizable(r => r.Columns(true))
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(10))
                .Excel(excel => excel
                .FileName("CauHinh.xlsx")
                .Filterable(true)
                .ProxyURL(Url.Action("ExportExcel", "Config")))
                .Pdf(pdf => pdf
                .AllPages()
                .AvoidLinks()
                .PaperSize("A4")
                .Margin("2cm", "1cm", "1cm", "1cm")
                .Landscape()
                .RepeatHeaders()
                .FileName("Config.pdf"))
                .Search(search=> {
                })
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(1000)
                .Model(model =>
                {
                    model.Id(t => t.ID);
                    model.Field(t => t.ID).Editable(false);
                    model.Field(t => t.PaymentCreated).DefaultValue(DateTime.Now);
                    model.Field(t => t.TotalPayment).DefaultValue(0);

                })
                .Events(t => { t.RequestEnd("onGridRequestEndInvoicePayment"); })
                .Read(t => t.Action("GetByInvoiceIDToList", "InvoicePayment").Data("filterProjectThiCong"))
                .Destroy(t => t.Action("Delete", "InvoicePayment"))
                .Create(t => t.Action("Create", "InvoicePayment").Data("filterProjectThiCong"))
                .Update(t => t.Action("Update", "InvoicePayment"))))
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)
<script>
    function onGridRequestEndProjectThiCong(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#ProjectThiCong").data("kendoGrid").dataSource.read();
            setInvoice();
        }
    }
    function onGridRequestEndInvoicePayment(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#InvoicePayment").data("kendoGrid").dataSource.read();
            setInvoice();
        }
    }
    function filterProjectThiCong(e) {
        var invoiceIDValue = $("#ID").val();
        return { invoiceID: invoiceIDValue };
    }
    function setInvoice() {
        $.ajax(
            {
                type: "POST",
                datatype: "JSON",
                url: '@Url.Action("GetByID", "Invoice")',
                data: { ID: $("#ID").val() },
                success: function (result) {
                    var TotalNoTax = Math.round(result["TotalNoTax"]);
                    var TotalNoTaxString = TotalNoTax.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                    var TotalTax = Math.round(result["TotalTax"]);
                    var TotalTaxString = TotalTax.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                    var Total = Math.round(result["Total"]);
                    var TotalString = Total.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                    var TotalPaid = Math.round(result["TotalPaid"]);
                    var TotalPaidString = TotalPaid.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                    var TotalDebt = Math.round(result["TotalDebt"]);
                    var TotalDebtString = TotalDebt.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                    $("#TotalNoTax").val(TotalNoTaxString);
                    $("#TotalTax").val(TotalTaxString);
                    $("#Total").val(TotalString);
                    $("#TotalPaid").val(TotalPaidString);
                    $("#TotalDebt").val(TotalDebtString);
                },
                error: function (jqXHR, exception) { }
            });
    }
</script>