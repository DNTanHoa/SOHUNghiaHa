@{
    ViewData["Title"] = "Chi tiết chứng từ nhập kho ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Kendo.Mvc.UI
@using SOHU.Data.Models
@model Invoice

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Chi tiết chứng từ nhập kho</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Chúng từ</a></li>
                    <li class="breadcrumb-item active"><a class="text-primary" asp-action="Index" asp-controller="Invoice">Chứng từ nhập kho</a></li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="card w-100">
                <div class="card-header">
                    <div class="row">
                        <div class="col-4 col-sm-4 col-md-1 col-lg-1">
                            <button type="button" class="btn btn-primary w-100" title="Lưu" onclick="onSaveChange()">
                                <i class="fas fa-save"></i>
                            </button>
                        </div>
                        <div class="col-4 col-sm-4 col-md-1 col-lg-1">
                            <button type="button" class="btn btn-warning w-100" title="Hủy thay đổi" onclick="onReset()">
                                <i class="text-white fas fa-exclamation-circle"></i>
                            </button>
                        </div>
                        <div class="col-4 col-sm-4 col-md-1 col-lg-1">
                            <a asp-action="Index" asp-controller="Invoice" class="btn btn-dark w-100" title="Thoát">
                                <i class="fas fa-share-square"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-md-3 col-lg-2">
                                    <label class="m-0 mr-2">Số chứng từ</label>
                                </div>
                                <div class="col-md-9 col-lg-10">
                                    @(Html.TextBoxFor(Model => Model.ManageCode, "", new { @class = "form-control", placeholder = "Số chứng từ" }))
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-3 col-lg-2">
                                    <label class="m-0 mr-2">Ngày nhập</label>
                                </div>
                                <div class="col-md-9 col-lg-10">
                                    @(Html.Kendo()
                                      .DatePickerFor(Model => Model.InvoiceCreated)
                                      .HtmlAttributes(new { @class = "form-control", placeholder = "Ngày nhập" }))
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-3 col-lg-2">
                                    <label class="m-0 mr-2">Bên giao</label>
                                </div>
                                <div class="col-md-9 col-lg-10">
                                    @(Html.TextBoxFor(Model => Model.SellName, "", new { @class = "form-control", placeholder = "Bên giao" }))
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-3 col-lg-2">
                                    <label class="m-0 mr-2">Địa chỉ</label>
                                </div>
                                <div class="col-md-9 col-lg-10">
                                    @(Html.TextBoxFor(Model => Model.SellAddress, "", new { @class = "form-control", placeholder = "Nhà cung cấp" }))
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="row">
                                <div class="col-md-3 col-lg-2">
                                    <label class="m-0 mr-2">Ghi chú</label>
                                </div>
                                <div class="col-md-9 col-lg-10">
                                    @(Html.TextBoxFor(Model => Model.Note, "", new { @class = "form-control", placeholder = "Ghi chú" }))
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-3 col-lg-2">
                                    <label class="m-0 mr-2">Thuế</label>
                                </div>
                                <div class="col-md-9 col-lg-10">
                                    @(Html.Kendo()
                                      .NumericTextBoxFor(Model => Model.Tax)
                                      .HtmlAttributes(new { @class = "form-control", placeholder = "Thuế" }))
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-md-3 col-lg-2">
                                    <label class="m-0 mr-2">Tiền thuế</label>
                                </div>
                                <div class="col-md-9 col-lg-10">
                                    @(Html.Kendo()
                                      .NumericTextBoxFor(Model => Model.TotalTax)
                                      .HtmlAttributes(new { @class = "form-control", placeholder = "Tiền thuế" }))
                                </div>
                            </div>    
                            <div class="row mt-1">
                                <div class="col-md-3 col-lg-2">
                                    <label class="m-0 mr-2">Thành tiền</label>
                                </div>
                                <div class="col-md-9 col-lg-10">
                                    @(Html.Kendo()
                                      .NumericTextBoxFor(Model => Model.Total)
                                      .HtmlAttributes(new { @class = "form-control", placeholder = "Thành tiền" }))
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card w-100">
                <div class="card-header">
                    <h3 class="card-title">Chi tiết</h3>
                </div>
                <div class="card-body">
                    @(Html.Kendo().Grid<SOHU.Data.Models.InvoiceDetail>()
                    .Name("InvoiceDetail")
                    .Columns(columns =>
                    {
                        columns.Command(command =>
                        {
                            command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "padding-top:6px; padding-left:15px; border-radius: 6px; width:50px; font-weight:bold; color:black;" });
                            command.Destroy().Text("&nbsp;").IconClass("fas fa-trash").HtmlAttributes(new { style = "color:#ffffff; background-color:#d73925; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-danger" });
                        }).Width(250);
                        columns.Bound(t => t.Id).Title("ID").Width(100).HtmlAttributes(new { style = "text-align:right;" });
                        columns.Bound(t => t.ProductCode).Title("Hàng hóa").Width(350);
                        columns.Bound(t => t.Quantity).Title("Số lượng").Width(200);
                        columns.Bound(t => t.UnitId).Title("Đơn vị tính").Width(200);
                        columns.Bound(t => t.UnitPrice).Title("Đơn giá").Width(200);
                        columns.Bound(t => t.Total).Title("Thành tiền").Width(200);
                        columns.Bound(t => t.Note).Title("Ghi chú").Width(300);
                        columns.Command(command =>
                        {
                            command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "padding-top:6px; padding-left:15px; border-radius: 6px; width:50px; font-weight:bold; color:black;" });
                            command.Destroy().Text("&nbsp;").IconClass("fas fa-trash").HtmlAttributes(new { style = "color:#ffffff; background-color:#d73925; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-danger" });
                        }).Width(250);
                    })
                    .ToolBar(toolBar => toolBar.Create().Text("&nbsp").IconClass("fas fa-plus").HtmlAttributes(new { style = "border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
                    .ToolBar(toolBar => toolBar.Search())
                    .Editable(editable => editable.Mode(GridEditMode.InLine))
                    .Sortable()
                    .Scrollable()
                    .Reorderable(r => r.Columns(true))
                    .Resizable(r => r.Columns(true))
                    .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(true)
                    .ButtonCount(10))
                    .Excel(excel => excel
                    .FileName("CauHinh.xlsx")
                    .Filterable(true)
                    .ProxyURL(Url.Action("ExportExcel", "CauHinh")))
                    .Pdf(pdf => pdf
                    .AllPages()
                    .AvoidLinks()
                    .PaperSize("A4")
                    .Margin("2cm", "1cm", "1cm", "1cm")
                    .Landscape()
                    .RepeatHeaders()
                    .FileName("CauHinh.pdf"))
                    .Search(search=> {
                        search.Field(f => f.ManageCode);
                    })
                    .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(1000)
                    .Model(model =>
                    {
                        model.Id(t => t.Id);
                        model.Field(t => t.Id).Editable(false);
                    })
                    .Events(t => { t.RequestEnd("onGridRequestEnd"); })
                    .Read(t => t.Action("GetByInvoiceId", "InvoiceDetail"))
                    .Destroy(t => t.Action("Delete", "InvoiceDetail"))
                    .Create(t => t.Action("Create", "InvoiceDetail"))
                    .Update(t => t.Action("Update", "InvoiceDetail"))))
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            Notify(messageType.trim(), note);
            $("#InvoiceDetail").data("kendoGrid").dataSource.read();
        }
        $("#InvoiceDetail").data("kendoGrid").dataSource.online(false);
    }

    function Notify(type, message) {
        switch (type) {
            case "success":
                toastr.success(message);
                break;
            case "info":
                toastr.info(message);
                break;
            case "error":
                toastr.error(message);
                break;
            case "warning":
                toastr.warning(message);
                break;
        }
    }
</script>
