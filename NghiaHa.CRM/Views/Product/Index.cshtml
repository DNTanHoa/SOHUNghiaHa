@{
    ViewData["Title"] = "Danh mục hàng hóa";
}
@using Kendo.Mvc.UI
@using SOHU.Data.Models
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Danh mục hàng hóa</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Admin - Danh mục</a></li>
                    <li class="breadcrumb-item active"><a class="text-primary" asp-action="Index" asp-controller="Menu">Danh mục hàng hóa</a></li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            @(Html.Kendo().Grid<Product>()
            .Name("Menu")
            .Columns(columns =>
            {
                columns.Command(command => {
                    command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "padding-top:6px; padding-left:15px; border-radius: 6px; width:50px; font-weight:bold; color:black;" });
                    command.Custom("detailFirst").Text("&nbsp;").IconClass("fas fa-external-link-alt").Click("onOpenDetail").HtmlAttributes(new { style = "color:#ffffff; background-color:#28a745; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-success" });
                    command.Destroy().Text("&nbsp;").IconClass("fas fa-trash").HtmlAttributes(new { style = "color:#ffffff; background-color:#d73925; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-danger" });
                }).Width(250);
                columns.Bound(t => t.Id).Title("ID").Width(100).HtmlAttributes(new { style = "text-align:right;" });
                columns.Bound(t => t.ParentId).Title("Nhóm").Width(100);
                columns.Bound(t => t.Title).Title("Hàng hóa").Width(350);
                columns.Bound(t => t.CategoryId).Title("Phân loại").Width(300);
                columns.Bound(t => t.Note).Title("Ghi chú").Width(400);
                columns.Command(command =>
                {
                    command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "padding-top:6px; padding-left:15px; border-radius: 6px; width:50px; font-weight:bold; color:black;" });
                    command.Custom("detailLast").Text("&nbsp;").IconClass("fas fa-external-link-alt").Click("onOpenDetail").HtmlAttributes(new { style = "color:#ffffff; background-color:#d73925; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-success" });
                    command.Destroy().Text("&nbsp;").IconClass("fas fa-trash").HtmlAttributes(new { style = "color:#ffffff; background-color:#d73925; padding-top:10px; border-radius: 6px; width:50px;", @class = "btn btn-danger" });
                }).Width(250);
            })
            .ToolBar(toolBar => toolBar.Create().Text("&nbsp").IconClass("fas fa-plus").HtmlAttributes(new { style = "border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
            .ToolBar(toolBar => toolBar.Search())
            .Editable(editable => editable.Mode(GridEditMode.InLine))
            .Sortable()
            .Scrollable()
            .Reorderable(r => r.Columns(true))
            .Resizable(r => r.Columns(true))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(10))
            .Excel(excel => excel
            .FileName("CauHinh.xlsx")
            .Filterable(true)
            .ProxyURL(Url.Action("ExportExcel", "CauHinh")))
            .Pdf(pdf => pdf
            .AllPages()
            .AvoidLinks()
            .PaperSize("A4")
            .Margin("2cm", "1cm", "1cm", "1cm")
            .Landscape()
            .RepeatHeaders()
            .FileName("CauHinh.pdf"))
            .Search(search=> {
                search.Field(f => f.Title);
                search.Field(f => f.Note);
            })
            .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(1000)
            .Model(model =>
            {
                model.Id(t => t.Id);
                model.Field(t => t.Id).Editable(false);
            })
            .Events(t => { t.RequestEnd("onGridRequestEnd"); })
            .Read(t => t.Action("GetAllToList", "Product"))
            .Destroy(t => t.Action("Delete", "Product"))
            .Create(t => t.Action("Create", "Product"))
            .Update(t => t.Action("Update", "Product"))))
        </div>
    </div>
</section>
<script>

    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            Notify(messageType.trim(), note);
            $("#Menu").data("kendoGrid").dataSource.read();
        }
    }

    function Notify(type, message) {
        switch (type) {
            case "success":
                toastr.success(message);
                break;
            case "info":
                toastr.info(message);
                break;
            case "error":
                toastr.error(message);
                break;
            case "warning":
                toastr.warning(message);
                break;
        }
    }

    function onOpenDetail(e) {
        var item = this.dataItem($(e.currentTarget).closest("tr"));
        var url = "@Url.Action("Detail","Menu")?ID=" + item.ID;
        window.location.href = url;
    }

</script>

